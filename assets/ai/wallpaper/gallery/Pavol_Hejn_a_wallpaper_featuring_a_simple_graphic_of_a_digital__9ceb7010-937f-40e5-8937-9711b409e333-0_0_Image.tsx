/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__9ceb7010-937f-40e5-8937-9711b409e333-0_0.json';
import source from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__9ceb7010-937f-40e5-8937-9711b409e333-0_0.png';

/**
 * Image of A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns.
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function AWallpaperFeaturingASimpleGraphicOfADigital9ceb7010937f40e589379711b409e3330_0_Image() {
    return (
        <Image
            alt="A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns."
            src={source}
            draggable="false"
            placeholder="blur"
            width={1920}
            height={1080}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
        />
    );
}

AWallpaperFeaturingASimpleGraphicOfADigital9ceb7010937f40e589379711b409e3330_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperFeaturingASimpleGraphicOfADigital9ceb7010937f40e589379711b409e3330_0_Image.colorStats = {
    averageColor: Color.fromHex('#12171a'),
    lightestColor: Color.fromHex('#aaffdd'),
    darkestColor: Color.fromHex('#000000'),
    minmaxWhite: [Color.fromHex('#aaffdd'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#883333'), Color.fromHex('#77ffcc')],
    minmaxGreen: [Color.fromHex('#55bb77'), Color.fromHex('#ee6677')],
    minmaxBlue: [Color.fromHex('#336677'), Color.fromHex('#aaffdd')],
    mostFrequentColor: Color.fromHex('#111111'),
    mostSaturatedColor: Color.fromHex('#001111'),
    mostGroupedColor: Color.fromHex('#111111'),
    bottom: {
        averageColor: Color.fromHex('#0a0f11'),
        lightestColor: Color.fromHex('#77ffcc'),
        darkestColor: Color.fromHex('#000000'),
        minmaxWhite: [Color.fromHex('#88eebb'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#664444'), Color.fromHex('#77ffcc')],
        minmaxGreen: [Color.fromHex('#55bb77'), Color.fromHex('#000011')],
        minmaxBlue: [Color.fromHex('#223344'), Color.fromHex('#77ffbb')],
        mostFrequentColor: Color.fromHex('#111111'),
        mostSaturatedColor: Color.fromHex('#001111'),
        mostGroupedColor: Color.fromHex('#111111'),
    },
} satisfies IImageColorStats;
