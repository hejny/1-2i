/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_panoramic_image_of_a_mountain_range_with_mist_and__d8329db9-b671-4eb7-a129-37e96d8851b5-0_1.json';
import source from './Pavol_Hejn_a_panoramic_image_of_a_mountain_range_with_mist_and__d8329db9-b671-4eb7-a129-37e96d8851b5-0_1.png';

/**
 * Image of A panoramic image of a mountain range, with mist and clouds drifting through the peaks.
 *
 * @see https://www.midjourney.com/app/jobs/1
 * @generated by generate-wallpapers-library
 */
export function APanoramicImageOfAMountainRangeWithMistAndD8329db9B6714eb7A12937e96d8851b50_1_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A panoramic image of a mountain range, with mist and clouds drifting through the peaks."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

APanoramicImageOfAMountainRangeWithMistAndD8329db9B6714eb7A12937e96d8851b50_1_Image.metadata =
    metadata satisfies IWallpaperMetadata;
APanoramicImageOfAMountainRangeWithMistAndD8329db9B6714eb7A12937e96d8851b50_1_Image.colorStats = {
    averageColor: Color.fromHex('#7f7b72'),
    lightestColor: Color.fromHex('#ffeeee'),
    darkestColor: Color.fromHex('#001100'),
    minmaxWhite: [Color.fromHex('#ffeeee'), Color.fromHex('#001100')],
    minmaxRed: [Color.fromHex('#884433'), Color.fromHex('#ffffdd')],
    minmaxGreen: [Color.fromHex('#778855'), Color.fromHex('#ffddee')],
    minmaxBlue: [Color.fromHex('#444466'), Color.fromHex('#ffffbb')],
    mostFrequentColor: Color.fromHex('#111111'),
    mostSaturatedColor: Color.fromHex('#001111'),
    mostGroupedColor: Color.fromHex('#111111'),
    bottom: {
        averageColor: Color.fromHex('#41413c'),
        lightestColor: Color.fromHex('#ddccbb'),
        darkestColor: Color.fromHex('#001100'),
        minmaxWhite: [Color.fromHex('#ddccbb'), Color.fromHex('#001100')],
        minmaxRed: [Color.fromHex('#884433'), Color.fromHex('#ccccbb')],
        minmaxGreen: [Color.fromHex('#778855'), Color.fromHex('#331111')],
        minmaxBlue: [Color.fromHex('#445566'), Color.fromHex('#ddcc99')],
        mostFrequentColor: Color.fromHex('#111111'),
        mostSaturatedColor: Color.fromHex('#001111'),
        mostGroupedColor: Color.fromHex('#111111'),
    },
} satisfies IImageColorStats;
