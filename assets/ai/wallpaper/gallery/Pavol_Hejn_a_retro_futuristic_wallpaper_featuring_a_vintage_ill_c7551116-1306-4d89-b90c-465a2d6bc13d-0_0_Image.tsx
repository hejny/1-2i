/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_retro_futuristic_wallpaper_featuring_a_vintage_ill_c7551116-1306-4d89-b90c-465a2d6bc13d-0_0.json';
import source from './Pavol_Hejn_a_retro_futuristic_wallpaper_featuring_a_vintage_ill_c7551116-1306-4d89-b90c-465a2d6bc13d-0_0.png';

/**
 * Image of A retro-futuristic wallpaper featuring a vintage illustration of a robot, set against a neon-colored background.
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function ARetroFuturisticWallpaperFeaturingAVintageIllC755111613064d89B90c465a2d6bc13d0_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A retro-futuristic wallpaper featuring a vintage illustration of a robot, set against a neon-colored background."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

ARetroFuturisticWallpaperFeaturingAVintageIllC755111613064d89B90c465a2d6bc13d0_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
ARetroFuturisticWallpaperFeaturingAVintageIllC755111613064d89B90c465a2d6bc13d0_0_Image.colorStats = {
    averageColor: Color.fromHex('#243141'),
    lightestColor: Color.fromHex('#ccddbb'),
    darkestColor: Color.fromHex('#000011'),
    minmaxWhite: [Color.fromHex('#ccddbb'), Color.fromHex('#000011')],
    minmaxRed: [Color.fromHex('#ee3333'), Color.fromHex('#aaeebb')],
    minmaxGreen: [Color.fromHex('#779966'), Color.fromHex('#aa0033')],
    minmaxBlue: [Color.fromHex('#002277'), Color.fromHex('#ddff99')],
    mostFrequentColor: Color.fromHex('#112233'),
    mostSaturatedColor: Color.fromHex('#002233'),
    mostGroupedColor: Color.fromHex('#112233'),
    bottom: {
        averageColor: Color.fromHex('#262e3e'),
        lightestColor: Color.fromHex('#dddd99'),
        darkestColor: Color.fromHex('#000011'),
        minmaxWhite: [Color.fromHex('#dddd99'), Color.fromHex('#000011')],
        minmaxRed: [Color.fromHex('#cc1133'), Color.fromHex('#aaee99')],
        minmaxGreen: [Color.fromHex('#559977'), Color.fromHex('#cc1133')],
        minmaxBlue: [Color.fromHex('#113377'), Color.fromHex('#ccee88')],
        mostFrequentColor: Color.fromHex('#112233'),
        mostSaturatedColor: Color.fromHex('#002244'),
        mostGroupedColor: Color.fromHex('#112233'),
    },
} satisfies IImageColorStats;
