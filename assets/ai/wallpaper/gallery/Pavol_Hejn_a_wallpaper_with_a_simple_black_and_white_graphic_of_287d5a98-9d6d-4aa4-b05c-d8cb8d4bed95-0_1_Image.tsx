/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_with_a_simple_black_and_white_graphic_of_287d5a98-9d6d-4aa4-b05c-d8cb8d4bed95-0_1.json';
import source from './Pavol_Hejn_a_wallpaper_with_a_simple_black_and_white_graphic_of_287d5a98-9d6d-4aa4-b05c-d8cb8d4bed95-0_1.png';

/**
 * Image of A wallpaper with a simple black and white graphic of a robot's head, against a solid colored background.
 *
 * @see https://www.midjourney.com/app/jobs/1
 * @generated by generate-wallpapers-library
 */
export function AWallpaperWithASimpleBlackAndWhiteGraphicOf287d5a989d6d4aa4B05cD8cb8d4bed950_1_Image() {
    return (
        <Image
            alt="A wallpaper with a simple black and white graphic of a robot's head, against a solid colored background."
            src={source}
            draggable="false"
            placeholder="blur"
            width={1920}
            height={1080}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
        />
    );
}

AWallpaperWithASimpleBlackAndWhiteGraphicOf287d5a989d6d4aa4B05cD8cb8d4bed950_1_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperWithASimpleBlackAndWhiteGraphicOf287d5a989d6d4aa4B05cD8cb8d4bed950_1_Image.colorStats = {
    averageColor: Color.fromHex('#0e0e0d'),
    lightestColor: Color.fromHex('#fffeff'),
    darkestColor: Color.fromHex('#000100'),
    minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#4d4945'), Color.fromHex('#feffff')],
    minmaxGreen: [Color.fromHex('#70736c'), Color.fromHex('#fffdff')],
    minmaxBlue: [Color.fromHex('#4f4d54'), Color.fromHex('#fffffb')],
    mostFrequentColor: Color.fromHex('#000100'),
    mostSaturatedColor: Color.fromHex('#000001'),
    mostGroupedColor: Color.fromHex('#020201'),
    bottom: {
        averageColor: Color.fromHex('#0a0a09'),
        lightestColor: Color.fromHex('#fdfdfc'),
        darkestColor: Color.fromHex('#000100'),
        minmaxWhite: [Color.fromHex('#fdfdfc'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#494643'), Color.fromHex('#fdfdfc')],
        minmaxGreen: [Color.fromHex('#737571'), Color.fromHex('#fdfdfc')],
        minmaxBlue: [Color.fromHex('#525254'), Color.fromHex('#fdfdfc')],
        mostFrequentColor: Color.fromHex('#000100'),
        mostSaturatedColor: Color.fromHex('#000101'),
        mostGroupedColor: Color.fromHex('#020201'),
    },
} satisfies IImageColorStats;
