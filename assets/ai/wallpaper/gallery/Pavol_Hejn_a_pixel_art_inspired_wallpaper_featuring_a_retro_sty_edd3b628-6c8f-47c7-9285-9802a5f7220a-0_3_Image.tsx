/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_pixel_art_inspired_wallpaper_featuring_a_retro_sty_edd3b628-6c8f-47c7-9285-9802a5f7220a-0_3.json';
import source from './Pavol_Hejn_a_pixel_art_inspired_wallpaper_featuring_a_retro_sty_edd3b628-6c8f-47c7-9285-9802a5f7220a-0_3.png';

/**
 * Image of A pixel art-inspired wallpaper featuring a retro-style robot, with a limited color palette and pixelated lines.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function APixelArtInspiredWallpaperFeaturingARetroStyEdd3b6286c8f47c792859802a5f7220a0_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A pixel art-inspired wallpaper featuring a retro-style robot, with a limited color palette and pixelated lines."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

APixelArtInspiredWallpaperFeaturingARetroStyEdd3b6286c8f47c792859802a5f7220a0_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
APixelArtInspiredWallpaperFeaturingARetroStyEdd3b6286c8f47c792859802a5f7220a0_3_Image.colorStats = {
    averageColor: Color.fromHex('#4c565b'),
    lightestColor: Color.fromHex('#dddddd'),
    darkestColor: Color.fromHex('#223333'),
    minmaxWhite: [Color.fromHex('#dddddd'), Color.fromHex('#002244')],
    minmaxRed: [Color.fromHex('#ee3344'), Color.fromHex('#77ffcc')],
    minmaxGreen: [Color.fromHex('#44bb77'), Color.fromHex('#ee3344')],
    minmaxBlue: [Color.fromHex('#113366'), Color.fromHex('#ffdd55')],
    mostFrequentColor: Color.fromHex('#114455'),
    mostSaturatedColor: Color.fromHex('#003355'),
    mostGroupedColor: Color.fromHex('#114455'),
    bottom: {
        averageColor: Color.fromHex('#254b58'),
        lightestColor: Color.fromHex('#ccccbb'),
        darkestColor: Color.fromHex('#003344'),
        minmaxWhite: [Color.fromHex('#ccccbb'), Color.fromHex('#003344')],
        minmaxRed: [Color.fromHex('#cc3355'), Color.fromHex('#66ffbb')],
        minmaxGreen: [Color.fromHex('#229977'), Color.fromHex('#cc3355')],
        minmaxBlue: [Color.fromHex('#113366'), Color.fromHex('#ffcc66')],
        mostFrequentColor: Color.fromHex('#114455'),
        mostSaturatedColor: Color.fromHex('#005555'),
        mostGroupedColor: Color.fromHex('#114455'),
    },
} satisfies IImageColorStats;
