/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_poster_style_image_of_a_rocket_taking_off_from_ear_334670bd-c4c5-4513-a278-3e34f6dec00d-0_3.json';
import source from './Pavol_Hejn_a_poster_style_image_of_a_rocket_taking_off_from_ear_334670bd-c4c5-4513-a278-3e34f6dec00d-0_3.png';

/**
 * Image of A poster-style image of a rocket taking off from Earth, with bold typography and a vintage color scheme that adds a touch of nostalgia.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function APosterStyleImageOfARocketTakingOffFromEar34670bdC4c54513A2783e34f6dec00d03_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A poster-style image of a rocket taking off from Earth, with bold typography and a vintage color scheme that adds a touch of nostalgia."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

APosterStyleImageOfARocketTakingOffFromEar34670bdC4c54513A2783e34f6dec00d03_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
APosterStyleImageOfARocketTakingOffFromEar34670bdC4c54513A2783e34f6dec00d03_3_Image.colorStats = {
    averageColor: Color.fromHex('#a6a492'),
    lightestColor: Color.fromHex('#ffeedd'),
    darkestColor: Color.fromHex('#111111'),
    minmaxWhite: [Color.fromHex('#ffffdd'), Color.fromHex('#111111')],
    minmaxRed: [Color.fromHex('#cc3333'), Color.fromHex('#ffffdd')],
    minmaxGreen: [Color.fromHex('#55aa88'), Color.fromHex('#ffeedd')],
    minmaxBlue: [Color.fromHex('#335577'), Color.fromHex('#ffffbb')],
    mostFrequentColor: Color.fromHex('#eeddcc'),
    mostSaturatedColor: Color.fromHex('#003333'),
    mostGroupedColor: Color.fromHex('#eeddcc'),
    bottom: {
        averageColor: Color.fromHex('#aea28e'),
        lightestColor: Color.fromHex('#ffeedd'),
        darkestColor: Color.fromHex('#221122'),
        minmaxWhite: [Color.fromHex('#ffeedd'), Color.fromHex('#221122')],
        minmaxRed: [Color.fromHex('#bb3322'), Color.fromHex('#eeeedd')],
        minmaxGreen: [Color.fromHex('#55aa88'), Color.fromHex('#ffeedd')],
        minmaxBlue: [Color.fromHex('#443355'), Color.fromHex('#ffeeaa')],
        mostFrequentColor: Color.fromHex('#eeddcc'),
        mostSaturatedColor: Color.fromHex('#aa3311'),
        mostGroupedColor: Color.fromHex('#eeddcc'),
    },
} satisfies IImageColorStats;
