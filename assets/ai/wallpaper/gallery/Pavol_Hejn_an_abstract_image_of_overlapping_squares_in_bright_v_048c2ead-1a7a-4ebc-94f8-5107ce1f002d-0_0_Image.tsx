/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_an_abstract_image_of_overlapping_squares_in_bright_v_048c2ead-1a7a-4ebc-94f8-5107ce1f002d-0_0.json';
import source from './Pavol_Hejn_an_abstract_image_of_overlapping_squares_in_bright_v_048c2ead-1a7a-4ebc-94f8-5107ce1f002d-0_0.png';

/**
 * Image of An abstract image of overlapping squares in bright, vibrant colors for a business or marketing website
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function AnAbstractImageOfOverlappingSquaresInBrightV48c2ead1a7a4ebc94f85107ce1f002d00_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="An abstract image of overlapping squares in bright, vibrant colors for a business or marketing website"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AnAbstractImageOfOverlappingSquaresInBrightV48c2ead1a7a4ebc94f85107ce1f002d00_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AnAbstractImageOfOverlappingSquaresInBrightV48c2ead1a7a4ebc94f85107ce1f002d00_0_Image.colorStats = {
    averageColor: Color.fromHex('#9a824e'),
    lightestColor: Color.fromHex('#ccffdd'),
    darkestColor: Color.fromHex('#442200'),
    minmaxWhite: [Color.fromHex('#ddffcc'), Color.fromHex('#110022')],
    minmaxRed: [Color.fromHex('#ff1100'), Color.fromHex('#44eecc')],
    minmaxGreen: [Color.fromHex('#44aa55'), Color.fromHex('#ff1100')],
    minmaxBlue: [Color.fromHex('#115599'), Color.fromHex('#ffdd22')],
    mostFrequentColor: Color.fromHex('#113355'),
    mostSaturatedColor: Color.fromHex('#772200'),
    mostGroupedColor: Color.fromHex('#ffcc22'),
    bottom: {
        averageColor: Color.fromHex('#6d7152'),
        lightestColor: Color.fromHex('#ccffdd'),
        darkestColor: Color.fromHex('#441100'),
        minmaxWhite: [Color.fromHex('#ddffcc'), Color.fromHex('#110022')],
        minmaxRed: [Color.fromHex('#ee3300'), Color.fromHex('#44eecc')],
        minmaxGreen: [Color.fromHex('#449955'), Color.fromHex('#ee3311')],
        minmaxBlue: [Color.fromHex('#115599'), Color.fromHex('#ffdd22')],
        mostFrequentColor: Color.fromHex('#113355'),
        mostSaturatedColor: Color.fromHex('#cc5500'),
        mostGroupedColor: Color.fromHex('#ffcc22'),
    },
} satisfies IImageColorStats;
