/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_with_a_graph_of_data_visualization_in_a__1b712b9f-b605-4aea-a6db-cdd2b5ed08c9-0_3.json';
import source from './Pavol_Hejn_a_wallpaper_with_a_graph_of_data_visualization_in_a__1b712b9f-b605-4aea-a6db-cdd2b5ed08c9-0_3.png';

/**
 * Image of A wallpaper with a graph of data visualization, in a minimalist and modern design.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AWallpaperWithAGraphOfDataVisualizationInA1b712b9fB6054aeaA6dbCdd2b5ed08c90_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper with a graph of data visualization, in a minimalist and modern design."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperWithAGraphOfDataVisualizationInA1b712b9fB6054aeaA6dbCdd2b5ed08c90_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperWithAGraphOfDataVisualizationInA1b712b9fB6054aeaA6dbCdd2b5ed08c90_3_Image.colorStats = {
    averageColor: Color.fromHex('#cbc2be'),
    lightestColor: Color.fromHex('#ffffff'),
    darkestColor: Color.fromHex('#111122'),
    minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#111122')],
    minmaxRed: [Color.fromHex('#bb2222'), Color.fromHex('#eeffff')],
    minmaxGreen: [Color.fromHex('#667766'), Color.fromHex('#ffffff')],
    minmaxBlue: [Color.fromHex('#334477'), Color.fromHex('#ffffee')],
    mostFrequentColor: Color.fromHex('#ffffee'),
    mostSaturatedColor: Color.fromHex('#772211'),
    mostGroupedColor: Color.fromHex('#dddddd'),
    bottom: {
        averageColor: Color.fromHex('#e1c3b8'),
        lightestColor: Color.fromHex('#ffeeee'),
        darkestColor: Color.fromHex('#661111'),
        minmaxWhite: [Color.fromHex('#ffffee'), Color.fromHex('#441122')],
        minmaxRed: [Color.fromHex('#bb2222'), Color.fromHex('#ffffee')],
        minmaxGreen: [Color.fromHex('#668888'), Color.fromHex('#ffeeee')],
        minmaxBlue: [Color.fromHex('#556688'), Color.fromHex('#ffffee')],
        mostFrequentColor: Color.fromHex('#ffffee'),
        mostSaturatedColor: Color.fromHex('#772211'),
        mostGroupedColor: Color.fromHex('#ffeeee'),
    },
} satisfies IImageColorStats;
