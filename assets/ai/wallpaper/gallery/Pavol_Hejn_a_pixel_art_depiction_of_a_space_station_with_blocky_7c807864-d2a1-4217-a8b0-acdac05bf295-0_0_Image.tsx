/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_pixel_art_depiction_of_a_space_station_with_blocky_7c807864-d2a1-4217-a8b0-acdac05bf295-0_0.json';
import source from './Pavol_Hejn_a_pixel_art_depiction_of_a_space_station_with_blocky_7c807864-d2a1-4217-a8b0-acdac05bf295-0_0.png';

/**
 * Image of A pixel art depiction of a space station, with blocky shapes and limited colors that create a retro and futuristic feel.
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function APixelArtDepictionOfASpaceStationWithBlocky7c807864D2a14217A8b0Acdac05bf2950_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A pixel art depiction of a space station, with blocky shapes and limited colors that create a retro and futuristic feel."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

APixelArtDepictionOfASpaceStationWithBlocky7c807864D2a14217A8b0Acdac05bf2950_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
APixelArtDepictionOfASpaceStationWithBlocky7c807864D2a14217A8b0Acdac05bf2950_0_Image.colorStats = {
    averageColor: Color.fromHex('#32485d'),
    lightestColor: Color.fromHex('#ffffff'),
    darkestColor: Color.fromHex('#001122'),
    minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#001122')],
    minmaxRed: [Color.fromHex('#993333'), Color.fromHex('#99ffee')],
    minmaxGreen: [Color.fromHex('#88bb77'), Color.fromHex('#ffffff')],
    minmaxBlue: [Color.fromHex('#443377'), Color.fromHex('#eeee55')],
    mostFrequentColor: Color.fromHex('#002233'),
    mostSaturatedColor: Color.fromHex('#002233'),
    mostGroupedColor: Color.fromHex('#114455'),
    bottom: {
        averageColor: Color.fromHex('#304055'),
        lightestColor: Color.fromHex('#eeeeee'),
        darkestColor: Color.fromHex('#001122'),
        minmaxWhite: [Color.fromHex('#eeffee'), Color.fromHex('#001122')],
        minmaxRed: [Color.fromHex('#cc6611'), Color.fromHex('#88ffff')],
        minmaxGreen: [Color.fromHex('#99aa66'), Color.fromHex('#eeeeee')],
        minmaxBlue: [Color.fromHex('#114477'), Color.fromHex('#eeee55')],
        mostFrequentColor: Color.fromHex('#002233'),
        mostSaturatedColor: Color.fromHex('#002233'),
        mostGroupedColor: Color.fromHex('#002233'),
    },
} satisfies IImageColorStats;
