/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_circuit_boar_1d5bfa73-c656-4cd6-8a61-1a1479694a3f-0_3.json';
import source from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_circuit_boar_1d5bfa73-c656-4cd6-8a61-1a1479694a3f-0_3.png';

/**
 * Image of A wallpaper with a repeating pattern of circuit board components, in shades of black, grey, and neon green.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AWallpaperWithARepeatingPatternOfCircuitBoar1d5bfa73C6564cd68a611a1479694a3f0_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper with a repeating pattern of circuit board components, in shades of black, grey, and neon green."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperWithARepeatingPatternOfCircuitBoar1d5bfa73C6564cd68a611a1479694a3f0_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperWithARepeatingPatternOfCircuitBoar1d5bfa73C6564cd68a611a1479694a3f0_3_Image.colorStats = {
    averageColor: Color.fromHex('#252c1e'),
    lightestColor: Color.fromHex('#ccbbbb'),
    darkestColor: Color.fromHex('#001100'),
    minmaxWhite: [Color.fromHex('#ccbbbb'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#776611'), Color.fromHex('#aabbbb')],
    minmaxGreen: [Color.fromHex('#88bb33'), Color.fromHex('#000011')],
    minmaxBlue: [Color.fromHex('#446677'), Color.fromHex('#ccdd55')],
    mostFrequentColor: Color.fromHex('#112211'),
    mostSaturatedColor: Color.fromHex('#112200'),
    mostGroupedColor: Color.fromHex('#111111'),
    bottom: {
        averageColor: Color.fromHex('#232a1b'),
        lightestColor: Color.fromHex('#889999'),
        darkestColor: Color.fromHex('#001100'),
        minmaxWhite: [Color.fromHex('#aaaa77'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#776622'), Color.fromHex('#77aa66')],
        minmaxGreen: [Color.fromHex('#669933'), Color.fromHex('#000011')],
        minmaxBlue: [Color.fromHex('#446666'), Color.fromHex('#aabb22')],
        mostFrequentColor: Color.fromHex('#112211'),
        mostSaturatedColor: Color.fromHex('#001111'),
        mostGroupedColor: Color.fromHex('#111111'),
    },
} satisfies IImageColorStats;
