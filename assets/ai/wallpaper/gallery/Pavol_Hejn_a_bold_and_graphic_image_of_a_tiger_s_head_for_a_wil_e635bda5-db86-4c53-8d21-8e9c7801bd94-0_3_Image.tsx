/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_bold_and_graphic_image_of_a_tiger_s_head_for_a_wil_e635bda5-db86-4c53-8d21-8e9c7801bd94-0_3.json';
import source from './Pavol_Hejn_a_bold_and_graphic_image_of_a_tiger_s_head_for_a_wil_e635bda5-db86-4c53-8d21-8e9c7801bd94-0_3.png';

/**
 * Image of A bold and graphic image of a tiger's head for a wildlife or animal conservation website
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function ABoldAndGraphicImageOfATigerSHeadForAWilE635bda5Db864c538d218e9c7801bd940_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A bold and graphic image of a tiger's head for a wildlife or animal conservation website"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

ABoldAndGraphicImageOfATigerSHeadForAWilE635bda5Db864c538d218e9c7801bd940_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
ABoldAndGraphicImageOfATigerSHeadForAWilE635bda5Db864c538d218e9c7801bd940_3_Image.colorStats = {
    averageColor: Color.fromHex('#383a39'),
    lightestColor: Color.fromHex('#ffeeff'),
    darkestColor: Color.fromHex('#000000'),
    minmaxWhite: [Color.fromHex('#ffffee'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#cc5511'), Color.fromHex('#eeffff')],
    minmaxGreen: [Color.fromHex('#778855'), Color.fromHex('#ffeeff')],
    minmaxBlue: [Color.fromHex('#223355'), Color.fromHex('#ffffaa')],
    mostFrequentColor: Color.fromHex('#001122'),
    mostSaturatedColor: Color.fromHex('#001122'),
    mostGroupedColor: Color.fromHex('#001122'),
    bottom: {
        averageColor: Color.fromHex('#232f36'),
        lightestColor: Color.fromHex('#ffffee'),
        darkestColor: Color.fromHex('#001111'),
        minmaxWhite: [Color.fromHex('#ffffee'), Color.fromHex('#001111')],
        minmaxRed: [Color.fromHex('#bb5522'), Color.fromHex('#ffffee')],
        minmaxGreen: [Color.fromHex('#668866'), Color.fromHex('#ffeeee')],
        minmaxBlue: [Color.fromHex('#443355'), Color.fromHex('#ffffcc')],
        mostFrequentColor: Color.fromHex('#001122'),
        mostSaturatedColor: Color.fromHex('#001122'),
        mostGroupedColor: Color.fromHex('#001122'),
    },
} satisfies IImageColorStats;
