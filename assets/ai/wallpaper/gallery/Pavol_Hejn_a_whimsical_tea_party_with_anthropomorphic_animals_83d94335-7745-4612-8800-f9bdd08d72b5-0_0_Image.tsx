/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_whimsical_tea_party_with_anthropomorphic_animals_83d94335-7745-4612-8800-f9bdd08d72b5-0_0.json';
import source from './Pavol_Hejn_a_whimsical_tea_party_with_anthropomorphic_animals_83d94335-7745-4612-8800-f9bdd08d72b5-0_0.png';

/**
 * Image of A whimsical tea party with anthropomorphic animals
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function AWhimsicalTeaPartyWithAnthropomorphicAnimals83d94335774546128800F9bdd08d72b50_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A whimsical tea party with anthropomorphic animals"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWhimsicalTeaPartyWithAnthropomorphicAnimals83d94335774546128800F9bdd08d72b50_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWhimsicalTeaPartyWithAnthropomorphicAnimals83d94335774546128800F9bdd08d72b50_0_Image.colorStats = {
    averageColor: Color.fromHex('#494437'),
    lightestColor: Color.fromHex('#eeeeff'),
    darkestColor: Color.fromHex('#111100'),
    minmaxWhite: [Color.fromHex('#eeeeff'), Color.fromHex('#111100')],
    minmaxRed: [Color.fromHex('#993311'), Color.fromHex('#eeeeff')],
    minmaxGreen: [Color.fromHex('#668855'), Color.fromHex('#eeeeff')],
    minmaxBlue: [Color.fromHex('#445577'), Color.fromHex('#eeeedd')],
    mostFrequentColor: Color.fromHex('#111111'),
    mostSaturatedColor: Color.fromHex('#441100'),
    mostGroupedColor: Color.fromHex('#111111'),
    bottom: {
        averageColor: Color.fromHex('#544a3d'),
        lightestColor: Color.fromHex('#eeeeee'),
        darkestColor: Color.fromHex('#222200'),
        minmaxWhite: [Color.fromHex('#eeeeee'), Color.fromHex('#111111')],
        minmaxRed: [Color.fromHex('#aa4411'), Color.fromHex('#eeeeee')],
        minmaxGreen: [Color.fromHex('#888855'), Color.fromHex('#eeeeee')],
        minmaxBlue: [Color.fromHex('#555566'), Color.fromHex('#eeeedd')],
        mostFrequentColor: Color.fromHex('#111111'),
        mostSaturatedColor: Color.fromHex('#222200'),
        mostGroupedColor: Color.fromHex('#111111'),
    },
} satisfies IImageColorStats;
