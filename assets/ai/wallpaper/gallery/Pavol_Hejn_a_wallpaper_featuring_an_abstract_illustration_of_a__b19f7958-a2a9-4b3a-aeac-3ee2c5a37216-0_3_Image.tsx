/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_featuring_an_abstract_illustration_of_a__b19f7958-a2a9-4b3a-aeac-3ee2c5a37216-0_3.json';
import source from './Pavol_Hejn_a_wallpaper_featuring_an_abstract_illustration_of_a__b19f7958-a2a9-4b3a-aeac-3ee2c5a37216-0_3.png';

/**
 * Image of A wallpaper featuring an abstract illustration of a futuristic data center, with sleek and modern graphics and a minimalist color scheme.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AWallpaperFeaturingAnAbstractIllustrationOfAB19f7958A2a94b3aAeac3ee2c5a372160_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper featuring an abstract illustration of a futuristic data center, with sleek and modern graphics and a minimalist color scheme."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperFeaturingAnAbstractIllustrationOfAB19f7958A2a94b3aAeac3ee2c5a372160_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperFeaturingAnAbstractIllustrationOfAB19f7958A2a94b3aAeac3ee2c5a372160_3_Image.colorStats = {
    averageColor: Color.fromHex('#311d4a'),
    lightestColor: Color.fromHex('#ffeeff'),
    darkestColor: Color.fromHex('#330000'),
    minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#000011')],
    minmaxRed: [Color.fromHex('#dd1133'), Color.fromHex('#55ffee')],
    minmaxGreen: [Color.fromHex('#55bb88'), Color.fromHex('#dd0044')],
    minmaxBlue: [Color.fromHex('#3333bb'), Color.fromHex('#ffff77')],
    mostFrequentColor: Color.fromHex('#113377'),
    mostSaturatedColor: Color.fromHex('#000033'),
    mostGroupedColor: Color.fromHex('#000022'),
    bottom: {
        averageColor: Color.fromHex('#3e2958'),
        lightestColor: Color.fromHex('#ffeeff'),
        darkestColor: Color.fromHex('#000011'),
        minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#000011')],
        minmaxRed: [Color.fromHex('#dd1133'), Color.fromHex('#00bbee')],
        minmaxGreen: [Color.fromHex('#66bb88'), Color.fromHex('#dd1144')],
        minmaxBlue: [Color.fromHex('#1133aa'), Color.fromHex('#ffee77')],
        mostFrequentColor: Color.fromHex('#113377'),
        mostSaturatedColor: Color.fromHex('#000033'),
        mostGroupedColor: Color.fromHex('#000033'),
    },
} satisfies IImageColorStats;
