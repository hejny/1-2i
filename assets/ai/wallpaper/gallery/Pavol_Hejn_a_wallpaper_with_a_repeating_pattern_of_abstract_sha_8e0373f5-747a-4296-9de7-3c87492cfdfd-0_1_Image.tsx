/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_abstract_sha_8e0373f5-747a-4296-9de7-3c87492cfdfd-0_1.json';
import source from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_abstract_sha_8e0373f5-747a-4296-9de7-3c87492cfdfd-0_1.png';

/**
 * Image of A wallpaper with a repeating pattern of abstract shapes inspired by the Mandelbrot set, in a monochromatic color scheme.
 *
 * @see https://www.midjourney.com/app/jobs/1
 * @generated by generate-wallpapers-library
 */
export function AWallpaperWithARepeatingPatternOfAbstractSha8e0373f5747a42969de73c87492cfdfd0_1_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper with a repeating pattern of abstract shapes inspired by the Mandelbrot set, in a monochromatic color scheme."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperWithARepeatingPatternOfAbstractSha8e0373f5747a42969de73c87492cfdfd0_1_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperWithARepeatingPatternOfAbstractSha8e0373f5747a42969de73c87492cfdfd0_1_Image.colorStats = {
    averageColor: Color.fromHex('#1c2025'),
    lightestColor: Color.fromHex('#bbbbaa'),
    darkestColor: Color.fromHex('#000000'),
    minmaxWhite: [Color.fromHex('#bbbbaa'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#554444'), Color.fromHex('#aabbaa')],
    minmaxGreen: [Color.fromHex('#667766'), Color.fromHex('#110011')],
    minmaxBlue: [Color.fromHex('#445566'), Color.fromHex('#bbbbaa')],
    mostFrequentColor: Color.fromHex('#001111'),
    mostSaturatedColor: Color.fromHex('#001111'),
    mostGroupedColor: Color.fromHex('#222233'),
    bottom: {
        averageColor: Color.fromHex('#161a20'),
        lightestColor: Color.fromHex('#888899'),
        darkestColor: Color.fromHex('#000000'),
        minmaxWhite: [Color.fromHex('#888899'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#554444'), Color.fromHex('#778888')],
        minmaxGreen: [Color.fromHex('#667766'), Color.fromHex('#110011')],
        minmaxBlue: [Color.fromHex('#555566'), Color.fromHex('#001100')],
        mostFrequentColor: Color.fromHex('#001111'),
        mostSaturatedColor: Color.fromHex('#000011'),
        mostGroupedColor: Color.fromHex('#111122'),
    },
} satisfies IImageColorStats;
