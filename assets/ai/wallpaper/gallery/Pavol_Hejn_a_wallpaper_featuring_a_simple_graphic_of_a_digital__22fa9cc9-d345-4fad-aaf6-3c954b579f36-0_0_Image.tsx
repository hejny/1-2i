/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__22fa9cc9-d345-4fad-aaf6-3c954b579f36-0_0.json';
import source from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__22fa9cc9-d345-4fad-aaf6-3c954b579f36-0_0.png';

/**
 * Image of A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns, set against a gradient background.
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function AWallpaperFeaturingASimpleGraphicOfADigital22fa9cc9D3454fadAaf63c954b579f360_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns, set against a gradient background."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperFeaturingASimpleGraphicOfADigital22fa9cc9D3454fadAaf63c954b579f360_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperFeaturingASimpleGraphicOfADigital22fa9cc9D3454fadAaf63c954b579f360_0_Image.colorStats = {
    averageColor: Color.fromHex('#dd7670'),
    lightestColor: Color.fromHex('#ccddee'),
    darkestColor: Color.fromHex('#441122'),
    minmaxWhite: [Color.fromHex('#ccddee'), Color.fromHex('#000055')],
    minmaxRed: [Color.fromHex('#dd2233'), Color.fromHex('#55bbff')],
    minmaxGreen: [Color.fromHex('#779988'), Color.fromHex('#ff4466')],
    minmaxBlue: [Color.fromHex('#1133aa'), Color.fromHex('#ffbb77')],
    mostFrequentColor: Color.fromHex('#ffbb88'),
    mostSaturatedColor: Color.fromHex('#330044'),
    mostGroupedColor: Color.fromHex('#ff5555'),
    bottom: {
        averageColor: Color.fromHex('#ef8d6f'),
        lightestColor: Color.fromHex('#eeaaaa'),
        darkestColor: Color.fromHex('#441122'),
        minmaxWhite: [Color.fromHex('#eebbaa'), Color.fromHex('#110044')],
        minmaxRed: [Color.fromHex('#dd2233'), Color.fromHex('#eebbaa')],
        minmaxGreen: [Color.fromHex('#886677'), Color.fromHex('#dd2244')],
        minmaxBlue: [Color.fromHex('#112277'), Color.fromHex('#ffbb77')],
        mostFrequentColor: Color.fromHex('#ffbb88'),
        mostSaturatedColor: Color.fromHex('#220033'),
        mostGroupedColor: Color.fromHex('#ffaa77'),
    },
} satisfies IImageColorStats;
