/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_an_abstract_image_of_a_sunset_with_bold_warm_colors__edbfaac0-3a34-4e16-b3a4-84e07238fdb1-0_3.json';
import source from './Pavol_Hejn_an_abstract_image_of_a_sunset_with_bold_warm_colors__edbfaac0-3a34-4e16-b3a4-84e07238fdb1-0_3.png';

/**
 * Image of An abstract image of a sunset with bold, warm colors for a photography or travel website
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AnAbstractImageOfASunsetWithBoldWarmColorsEdbfaac03a344e16B3a484e07238fdb10_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="An abstract image of a sunset with bold, warm colors for a photography or travel website"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AnAbstractImageOfASunsetWithBoldWarmColorsEdbfaac03a344e16B3a484e07238fdb10_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AnAbstractImageOfASunsetWithBoldWarmColorsEdbfaac03a344e16B3a484e07238fdb10_3_Image.colorStats = {
    averageColor: Color.fromHex('#9d5e4f'),
    lightestColor: Color.fromHex('#cceeff'),
    darkestColor: Color.fromHex('#330000'),
    minmaxWhite: [Color.fromHex('#ffffee'), Color.fromHex('#110011')],
    minmaxRed: [Color.fromHex('#ee1111'), Color.fromHex('#99eeff')],
    minmaxGreen: [Color.fromHex('#668866'), Color.fromHex('#ee1133')],
    minmaxBlue: [Color.fromHex('#3344aa'), Color.fromHex('#ffdd33')],
    mostFrequentColor: Color.fromHex('#224466'),
    mostSaturatedColor: Color.fromHex('#440011'),
    mostGroupedColor: Color.fromHex('#221122'),
    bottom: {
        averageColor: Color.fromHex('#6e383c'),
        lightestColor: Color.fromHex('#ffdd99'),
        darkestColor: Color.fromHex('#330000'),
        minmaxWhite: [Color.fromHex('#ffdd99'), Color.fromHex('#110011')],
        minmaxRed: [Color.fromHex('#dd1122'), Color.fromHex('#3388aa')],
        minmaxGreen: [Color.fromHex('#447777'), Color.fromHex('#dd1122')],
        minmaxBlue: [Color.fromHex('#224477'), Color.fromHex('#ffdd66')],
        mostFrequentColor: Color.fromHex('#224466'),
        mostSaturatedColor: Color.fromHex('#440011'),
        mostGroupedColor: Color.fromHex('#221122'),
    },
} satisfies IImageColorStats;
