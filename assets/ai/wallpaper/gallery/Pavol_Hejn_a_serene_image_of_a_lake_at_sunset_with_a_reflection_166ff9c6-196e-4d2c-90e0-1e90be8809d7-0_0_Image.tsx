/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_serene_image_of_a_lake_at_sunset_with_a_reflection_166ff9c6-196e-4d2c-90e0-1e90be8809d7-0_0.json';
import source from './Pavol_Hejn_a_serene_image_of_a_lake_at_sunset_with_a_reflection_166ff9c6-196e-4d2c-90e0-1e90be8809d7-0_0.png';

/**
 * Image of A serene image of a lake at sunset with a reflection of the sky for a travel or vacation website
 *
 * @see https://www.midjourney.com/app/jobs/0
 * @generated by generate-wallpapers-library
 */
export function ASereneImageOfALakeAtSunsetWithAReflection166ff9c6196e4d2c90e01e90be8809d70_0_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A serene image of a lake at sunset with a reflection of the sky for a travel or vacation website"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

ASereneImageOfALakeAtSunsetWithAReflection166ff9c6196e4d2c90e01e90be8809d70_0_Image.metadata =
    metadata satisfies IWallpaperMetadata;
ASereneImageOfALakeAtSunsetWithAReflection166ff9c6196e4d2c90e01e90be8809d70_0_Image.colorStats = {
    averageColor: Color.fromHex('#62584d'),
    lightestColor: Color.fromHex('#ffdddd'),
    darkestColor: Color.fromHex('#001100'),
    minmaxWhite: [Color.fromHex('#ffeecc'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#cc4422'), Color.fromHex('#ffeecc')],
    minmaxGreen: [Color.fromHex('#558877'), Color.fromHex('#ffdddd')],
    minmaxBlue: [Color.fromHex('#225566'), Color.fromHex('#ffee88')],
    mostFrequentColor: Color.fromHex('#112222'),
    mostSaturatedColor: Color.fromHex('#331100'),
    mostGroupedColor: Color.fromHex('#112222'),
    bottom: {
        averageColor: Color.fromHex('#4a4942'),
        lightestColor: Color.fromHex('#eeddcc'),
        darkestColor: Color.fromHex('#001100'),
        minmaxWhite: [Color.fromHex('#eeddcc'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#bb4433'), Color.fromHex('#eeddcc')],
        minmaxGreen: [Color.fromHex('#557766'), Color.fromHex('#330000')],
        minmaxBlue: [Color.fromHex('#335566'), Color.fromHex('#ffdd88')],
        mostFrequentColor: Color.fromHex('#112222'),
        mostSaturatedColor: Color.fromHex('#111100'),
        mostGroupedColor: Color.fromHex('#112222'),
    },
} satisfies IImageColorStats;
