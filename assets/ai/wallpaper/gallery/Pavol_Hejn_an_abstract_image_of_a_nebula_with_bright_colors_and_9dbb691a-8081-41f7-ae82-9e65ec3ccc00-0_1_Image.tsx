/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_an_abstract_image_of_a_nebula_with_bright_colors_and_9dbb691a-8081-41f7-ae82-9e65ec3ccc00-0_1.json';
import source from './Pavol_Hejn_an_abstract_image_of_a_nebula_with_bright_colors_and_9dbb691a-8081-41f7-ae82-9e65ec3ccc00-0_1.png';

/**
 * Image of An abstract image of a nebula, with bright colors and intricate patterns representing the birth of stars.
 *
 * @see https://www.midjourney.com/app/jobs/1
 * @generated by generate-wallpapers-library
 */
export function AnAbstractImageOfANebulaWithBrightColorsAnd9dbb691a808141f7Ae829e65ec3ccc000_1_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="An abstract image of a nebula, with bright colors and intricate patterns representing the birth of stars."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AnAbstractImageOfANebulaWithBrightColorsAnd9dbb691a808141f7Ae829e65ec3ccc000_1_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AnAbstractImageOfANebulaWithBrightColorsAnd9dbb691a808141f7Ae829e65ec3ccc000_1_Image.colorStats = {
    averageColor: Color.fromHex('#634d4a'),
    lightestColor: Color.fromHex('#eeeeff'),
    darkestColor: Color.fromHex('#000000'),
    minmaxWhite: [Color.fromHex('#eeffff'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#cc2222'), Color.fromHex('#eeffff')],
    minmaxGreen: [Color.fromHex('#668855'), Color.fromHex('#eeeeff')],
    minmaxBlue: [Color.fromHex('#444499'), Color.fromHex('#ffdd66')],
    mostFrequentColor: Color.fromHex('#001122'),
    mostSaturatedColor: Color.fromHex('#110022'),
    mostGroupedColor: Color.fromHex('#000011'),
    bottom: {
        averageColor: Color.fromHex('#455155'),
        lightestColor: Color.fromHex('#eeffff'),
        darkestColor: Color.fromHex('#000000'),
        minmaxWhite: [Color.fromHex('#eeffff'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#cc4422'), Color.fromHex('#eeffff')],
        minmaxGreen: [Color.fromHex('#668855'), Color.fromHex('#eeffff')],
        minmaxBlue: [Color.fromHex('#115599'), Color.fromHex('#ffeebb')],
        mostFrequentColor: Color.fromHex('#001122'),
        mostSaturatedColor: Color.fromHex('#003355'),
        mostGroupedColor: Color.fromHex('#000011'),
    },
} satisfies IImageColorStats;
