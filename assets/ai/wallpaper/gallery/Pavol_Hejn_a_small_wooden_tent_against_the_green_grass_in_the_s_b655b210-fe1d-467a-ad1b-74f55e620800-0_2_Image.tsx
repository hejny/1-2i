/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_small_wooden_tent_against_the_green_grass_in_the_s_b655b210-fe1d-467a-ad1b-74f55e620800-0_2.json';
import source from './Pavol_Hejn_a_small_wooden_tent_against_the_green_grass_in_the_s_b655b210-fe1d-467a-ad1b-74f55e620800-0_2.png';

/**
 * Image of a small wooden tent against the green grass, in the style of glass fragments art, constantin brancusi, symmetrical balance, contemporary canadian art, security camera, elfriede lohse-w√§chtler, stone
 *
 * @see https://www.midjourney.com/app/jobs/2
 * @generated by generate-wallpapers-library
 */
export function ASmallWoodenTentAgainstTheGreenGrassInTheSB655b210Fe1d467aAd1b74f55e6208000_2_Image() {
    return (
        <Image
            alt="a small wooden tent against the green grass, in the style of glass fragments art, constantin brancusi, symmetrical balance, contemporary canadian art, security camera, elfriede lohse-w√§chtler, stone"
            src={source}
            draggable="false"
            placeholder="blur"
            width={1920}
            height={1080}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
        />
    );
}

ASmallWoodenTentAgainstTheGreenGrassInTheSB655b210Fe1d467aAd1b74f55e6208000_2_Image.metadata =
    metadata satisfies IWallpaperMetadata;
ASmallWoodenTentAgainstTheGreenGrassInTheSB655b210Fe1d467aAd1b74f55e6208000_2_Image.colorStats = {
    averageColor: Color.fromHex('#464c24'),
    lightestColor: Color.fromHex('#ccdddd'),
    darkestColor: Color.fromHex('#001100'),
    minmaxWhite: [Color.fromHex('#ddddcc'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#885522'), Color.fromHex('#ccdddd')],
    minmaxGreen: [Color.fromHex('#88aa00'), Color.fromHex('#110000')],
    minmaxBlue: [Color.fromHex('#335577'), Color.fromHex('#ffddbb')],
    mostFrequentColor: Color.fromHex('#333300'),
    mostSaturatedColor: Color.fromHex('#111100'),
    mostGroupedColor: Color.fromHex('#111111'),
    bottom: {
        averageColor: Color.fromHex('#4b4f19'),
        lightestColor: Color.fromHex('#eeddbb'),
        darkestColor: Color.fromHex('#001100'),
        minmaxWhite: [Color.fromHex('#eeddbb'), Color.fromHex('#000000')],
        minmaxRed: [Color.fromHex('#aa6633'), Color.fromHex('#eeddbb')],
        minmaxGreen: [Color.fromHex('#88aa22'), Color.fromHex('#000000')],
        minmaxBlue: [Color.fromHex('#445544'), Color.fromHex('#eeddaa')],
        mostFrequentColor: Color.fromHex('#333300'),
        mostSaturatedColor: Color.fromHex('#556600'),
        mostGroupedColor: Color.fromHex('#111111'),
    },
} satisfies IImageColorStats;
