import { PromptTemplate } from './PromptTemplate';
import { PromptTemplateParams } from './PromptTemplateParams';




PromptTemplatePipelineRunnerOptions{
    promptTemplatePipeline
}

export class PromptTemplatePipelineRunner {
    public constructor(public readonly promptTemplates: Array<PromptTemplate<any>>) {}

    public async runPrompts(params: PromptTemplateParams): Promise<PromptTemplateParams> {
        let paramsToPass: PromptTemplateParams = params;

        for (const promptTemplate of this.promptTemplates) {
            const prompt = promptTemplate.makePrompt(paramsToPass);
            const { response } = await prompt.toString();
            paramsToPass = { ...paramsToPass, response /* <- TODO: Detect param collision here */ };
        }

        return paramsToPass;
    }
}
